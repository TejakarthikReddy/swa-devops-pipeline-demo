# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:

- stage: Build

  jobs:
  - job: build
    displayName: Build static web app

    steps:
    
    - task: UseDotNet@2
      displayName: Install .NET
      inputs:
        packageType: 'sdk'
        version: '6.0.x'

    - script: |
        dotnet publish -c Release -o "$(Build.ArtifactStagingDirectory)/frontend"
      displayName: Build Blazor frontend
      workingDirectory: $(System.DefaultWorkingDirectory)/Client

    - script: |
        dotnet publish -c Release -o "$(Build.ArtifactStagingDirectory)/api"
      displayName: Build Azure Functions API
      workingDirectory: $(System.DefaultWorkingDirectory)/Api
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        
- stage: deploy_test
  displayName: Deploy to test

  jobs:
  - job: deploy
    displayName: Deploy

    steps:

    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureStaticWebApp@0
      inputs:
        app_location: 'frontend/wwwroot'
        api_location: 'api'
        skip_app_build: true
        skip_api_build: true
        verbose: true
        azure_static_web_apps_api_token: '$(SWA_DEPLOYMENT_TOKEN)'
        deployment_environment: 'test'
        workingDirectory: $(System.ArtifactsDirectory)/drop

- stage: deploy_production
  displayName: Deploy to production

  jobs:
  - deployment: deploy
    displayName: Deploy
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:

          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureStaticWebApp@0
            inputs:
              app_location: 'frontend/wwwroot'
              api_location: 'api'
              skip_app_build: true
              skip_api_build: true
              verbose: true
              azure_static_web_apps_api_token: '$(SWA_DEPLOYMENT_TOKEN)'
              workingDirectory: $(System.ArtifactsDirectory)/drop